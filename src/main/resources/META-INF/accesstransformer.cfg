# For getting at the underlying sound source
public net.minecraft.client.sounds.ChannelAccess$ChannelHandle f_120146_ #source
public com.mojang.blaze3d.audio.Channel f_83642_ #field_216441_b (source id)
public com.mojang.blaze3d.audio.Channel m_83683_()I #func_216428_j

# Get at the raw underlying values so we can do cloning and stuff
public net.minecraft.client.resources.sounds.AbstractSoundInstance f_119573_ #volume
public net.minecraft.client.resources.sounds.AbstractSoundInstance f_119574_ #pitch
public net.minecraft.client.resources.sounds.AbstractSoundInstance field_184369_l #soundEvent

# Need to access references internally to we can get an idea of whats going on
public net.minecraft.client.sounds.SoundEngine f_120221_ #listener
public net.minecraft.client.sounds.SoundEngine f_120226_ #playingSoundsChannel
public net.minecraft.client.sounds.SoundEngine f_120229_ #delayedSounds
public net.minecraft.client.sounds.SoundEngine f_120219_ #loaded

# Get a hold fo the SoundManager
public net.minecraft.client.sounds.SoundManager f_120349_ #soundEngine

# Need to get sound device context ID to reconfigure
#public com.mojang.blaze3d.audio.Library f_83686_ #field_216411_b (device id)
public com.mojang.blaze3d.audio.Library f_193465_ # currentDevice

# Get at the Locale so we can get a translation without formatting
public net.minecraft.client.resources.language.LanguageManager field_135049_a #CURRENT_LOCALE
public net.minecraft.client.resources.Locale func_135026_c(Ljava/lang/String;)Ljava/lang/String; #translateKeyPrivate

# Mono conversion
public com.mojang.blaze3d.audio.SoundBuffer f_83793_ #field_216475_a
public-f com.mojang.blaze3d.audio.SoundBuffer f_83794_ #field_216476_b
public com.mojang.blaze3d.audio.SoundBuffer m_83800_()Ljava/util/OptionalInt; #getBuffer

# World random for replacement
public-f net.minecraft.world.level.Level f_46441_ #rand

# GameRenderer random to replace with XorShiftRandom
public-f net.minecraft.client.renderer.GameRenderer f_109061_ #random

# Get access to the registered sprite sheets
public net.minecraft.client.particle.ParticleEngine f_107295_ #sprites

# Access Particle members to handle DripParticle ground collision
public net.minecraft.client.particle.Particle f_107218_ #onGround
public net.minecraft.client.particle.Particle f_107212_ #posX
public net.minecraft.client.particle.Particle f_107213_ #posY
public net.minecraft.client.particle.Particle f_107214_ #posZ

# DripParticle fluid type access
public net.minecraft.client.particle.DripParticle f_106049_ #fluid

# Need to know they are jumping
public net.minecraft.world.entity.LivingEntity f_20899_ #isJumping

# Have to short circuit Minecraft's step logic
public net.minecraft.world.entity.Entity f_19829_ #nextStepDistance

# Get access to the registered sprite sheets
public net.minecraft.client.particle.ParticleEngine f_107295_ #sprites

# Particle Work
public net.minecraft.client.particle.Particle f_107226_ #particleGravity
public net.minecraft.client.particle.Particle f_107230_ #particleAlpha
public net.minecraft.client.particle.SingleQuadParticle f_107663_ #particleScale
public net.minecraft.client.particle.Particle f_107215_ #motionX
public net.minecraft.client.particle.Particle f_107216_ #motionY
public net.minecraft.client.particle.Particle f_107217_ #motionZ

# Access to hide particles
public net.minecraft.world.entity.LivingEntity f_20963_ #HIDE_PARTICLES

# Find out info about the current game state
public net.minecraft.client.Minecraft m_91281_()Ljava/lang/String; #getCurrentAction
public net.minecraft.world.level.biome.Biome m_47505_(Lnet/minecraft/core/BlockPos;)F # getTemperature
public net.minecraft.world.level.biome.Biome m_47567_()Lnet/minecraft/world/level/biome/Biome$BiomeCategory; # getBiomeCategory